["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$RegExp",["^ "],"~$dropTextTo",["^ "],"~$INS",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$replica.inscore","~:imports",null,"~:requires",["^ ","~$replica.utils","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$doc-commands","^=","~$command!","^=","~$proc!","^=","~$add-routes!","^="],"~:defs",["^ ","~$i",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","~:line",89,"~:column",7,"~:end-line",89,"~:end-column",8,"~:arglists",["~#list",["~$quote",["^M",[["~$route","~$&","~$args"]]]]],"~:doc","The 'i' function is a route to almost all of the INScore built-in functionality inside replica.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^M",["^O","^P"]]],"^L",["^M",[["^O","~$&","^P"]]],"~:arglists-meta",["^M",[null]]]],"^9","~$replica.inscore/i","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",8,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^O","^P"]]],"^L",["^M",[["^O","~$&","^P"]]],"^V",["^M",[null]]],"^U",[["^M",["^O","^P"]]],"~:protocol-impl",null,"^V",["^M",[null]],"^I",1,"^H",89,"^J",89,"^T",1,"~:fn-var",true,"^L",["^M",[["^O","~$&","^P"]]],"^Q","The 'i' function is a route to almost all of the INScore built-in functionality inside replica."],"~$msgs!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",49,"^I",7,"^J",49,"^K",12,"^L",["^M",["^N",["^M",[["~$object","~$&","~$msgs"]]]]],"^Q","Address an object [or create it] and send to it some commands. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[","^10"]]],"^L",["^M",[["^[","~$&","^10"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/msgs!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",12,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[","^10"]]],"^L",["^M",[["^[","~$&","^10"]]],"^V",["^M",[null]]],"^U",[["^M",["^[","^10"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",49,"^J",49,"^T",1,"^Y",true,"^L",["^M",[["^[","~$&","^10"]]],"^Q","Address an object [or create it] and send to it some commands. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$routes",["^ ","^9","~$replica.inscore/routes","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",76,"^I",1,"^J",76,"^K",12,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",76,"^I",6,"^J",76,"^K",12],"~:tag","~$cljs.core/IMap"],"~$watch!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",64,"^I",7,"^J",64,"^K",13,"^L",["^M",["^N",["^M",[["^[","~$watch-for","~$&","~$body"]]]]],"^Q","Macro command for creating a watch to an element. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^17","^18"]]],"^L",["^M",[["^[","^17","~$&","^18"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/watch!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^17","^18"]]],"^L",["^M",[["^[","^17","~$&","^18"]]],"^V",["^M",[null]]],"^U",[["^M",["^[","^17","^18"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",64,"^J",64,"^T",2,"^Y",true,"^L",["^M",[["^[","^17","~$&","^18"]]],"^Q","Macro command for creating a watch to an element. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$msg!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",44,"^I",7,"^J",44,"^K",11,"^L",["^M",["^N",["^M",[["^[","~$&","~$msg-codes"]]]]],"^Q","Address an object [or create it] and send to it a command. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[","^1;"]]],"^L",["^M",[["^[","~$&","^1;"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/msg!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^[","^1;"]]],"^L",["^M",[["^[","~$&","^1;"]]],"^V",["^M",[null]]],"^U",[["^M",["^[","^1;"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",44,"^J",44,"^T",1,"^Y",true,"^L",["^M",[["^[","~$&","^1;"]]],"^Q","Address an object [or create it] and send to it a command. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$setx!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",54,"^I",7,"^J",54,"^K",12,"^L",["^M",["^N",["^M",[["^[","~$obj-type","~$&","^P"]]]]],"^Q","Dispatches a 'set [obj-type] [args]' command to an object.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^1>","^P"]]],"^L",["^M",[["^[","^1>","~$&","^P"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/setx!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",12,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^1>","^P"]]],"^L",["^M",[["^[","^1>","~$&","^P"]]],"^V",["^M",[null]]],"^U",[["^M",["^[","^1>","^P"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",54,"^J",54,"^T",2,"^Y",true,"^L",["^M",[["^[","^1>","~$&","^P"]]],"^Q","Dispatches a 'set [obj-type] [args]' command to an object."],"~$dropl!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",22,"^I",7,"^J",22,"^K",13,"^L",["^M",["^N",["^M",[["~$&","~$codes"]]]]],"^Q","Drops (sends) a line, combining its arguments and adding a semicolon to the end, to the active INScore window.","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1A"]]],"^L",["^M",[["~$&","^1A"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/dropl!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1A"]]],"^L",["^M",[["~$&","^1A"]]],"^V",["^M",[null]]],"^U",[["^M",["^1A"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",22,"^J",22,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1A"]]],"^Q","Drops (sends) a line, combining its arguments and adding a semicolon to the end, to the active INScore window."],"~$dropc!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",9,"^I",7,"^J",9,"^K",13,"^L",["^M",["^N",["^M",[["~$&","^1A"]]]]],"^Q","Drops (sends) the desired code string to the active INScore window. If several arguments are provided then they are combined as one string without any formatting.","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1A"]]],"^L",["^M",[["~$&","^1A"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/dropc!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1A"]]],"^L",["^M",[["~$&","^1A"]]],"^V",["^M",[null]]],"^U",[["^M",["^1A"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",9,"^J",9,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1A"]]],"^Q","Drops (sends) the desired code string to the active INScore window. If several arguments are provided then they are combined as one string without any formatting."],"~$clear!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",39,"^I",7,"^J",39,"^K",13,"^L",["^M",["^N",["^M",[["~$&","~$obj"]]]]],"^Q","sends a '* del' message to the desired object or scene (if no argument is provided then '/ITL/scene/' is assumed).","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1F"]]],"^L",["^M",[["~$&","^1F"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/clear!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1F"]]],"^L",["^M",[["~$&","^1F"]]],"^V",["^M",[null]]],"^U",[["^M",["^1F"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",39,"^J",39,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1F"]]],"^Q","sends a '* del' message to the desired object or scene (if no argument is provided then '/ITL/scene/' is assumed)."],"~$addr",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",32,"^I",7,"^J",32,"^K",11,"^L",["^M",["^N",["^M",[["^["]]]]],"^Q","Address an object from a scene, returns OSC path. If no scene is prepended in the form '/ITL/scenex/objx' then '/ITL/scene/[object]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"^9","~$replica.inscore/addr","^S",false,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^U",["^M",[["^["]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^H",32,"^J",32,"^T",1,"^Y",true,"^L",["^M",["^N",["^M",[["^["]]]]],"^Q","Address an object from a scene, returns OSC path. If no scene is prepended in the form '/ITL/scenex/objx' then '/ITL/scene/[object]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$dropls!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",27,"^I",7,"^J",27,"^K",14,"^L",["^M",["^N",["^M",[["~$&","~$lines"]]]]],"^Q","Drops (sends) one line for each argument to the active INScore window. You can provide fragments of code inside each line. [see doc for 'dropl aka replica.inscore/dropl!]","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1K"]]],"^L",["^M",[["~$&","^1K"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/dropls!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",14,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1K"]]],"^L",["^M",[["~$&","^1K"]]],"^V",["^M",[null]]],"^U",[["^M",["^1K"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",27,"^J",27,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1K"]]],"^Q","Drops (sends) one line for each argument to the active INScore window. You can provide fragments of code inside each line. [see doc for 'dropl aka replica.inscore/dropl!]"],"~$make-line",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",18,"^I",7,"^J",18,"^K",16,"^L",["^M",["^N",["^M",[["~$&","^1A"]]]]],"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1A"]]],"^L",["^M",[["~$&","^1A"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/make-line","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",16,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1A"]]],"^L",["^M",[["~$&","^1A"]]],"^V",["^M",[null]]],"^U",[["^M",["^1A"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",18,"^J",18,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1A"]]]],"~$als!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",71,"^I",7,"^J",71,"^K",11,"^L",["^M",["^N",["^M",[["^[","~$your-alias","~$&","~$opt"]]]]],"^Q","Macro command for creating an alias for the desired object","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^1P","^1Q"]]],"^L",["^M",[["^[","^1P","~$&","^1Q"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/als!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^1P","^1Q"]]],"^L",["^M",[["^[","^1P","~$&","^1Q"]]],"^V",["^M",[null]]],"^U",[["^M",["^[","^1P","^1Q"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",71,"^J",71,"^T",2,"^Y",true,"^L",["^M",[["^[","^1P","~$&","^1Q"]]],"^Q","Macro command for creating an alias for the desired object"],"~$gmn!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",59,"^I",7,"^J",59,"^K",11,"^L",["^M",["^N",["^M",[["^[","~$gmn-string","~$&","^1Q"]]]]],"^Q","Macro command for creating a new score from GMN code. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^1T","^1Q"]]],"^L",["^M",[["^[","^1T","~$&","^1Q"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/gmn!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^[","^1T","^1Q"]]],"^L",["^M",[["^[","^1T","~$&","^1Q"]]],"^V",["^M",[null]]],"^U",[["^M",["^[","^1T","^1Q"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",59,"^J",59,"^T",2,"^Y",true,"^L",["^M",[["^[","^1T","~$&","^1Q"]]],"^Q","Macro command for creating a new score from GMN code. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~$i","^Z","~$clear","~$gmn","^16","^1:","^1=","~$msg","^1@","^1C","^1E","^1H","^1J","^1M","~$g","~$dropl","~$alias","^10","~$watch","^:","~$dropc","~$dropls","~$als","^1O","^1S","~$setx","^W"]],"~:order",["~$g","^1[","^23","^22","^26","^25","^1H","^27","^24","^1Z","^1M","^10","^20","^21","^1O","^1S","^1J","^1=","^1C","^16","^1E","^Z","^1:","^1@","^W","~$i","^:"]],"^Q",null]