["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$RegExp",["^ "],"~$dropTextTo",["^ "],"~$INS",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$replica.inscore","~:imports",null,"~:requires",["^ ","~$replica.utils","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$doc-commands","^=","~$command!","^=","~$proc!","^=","~$add-routes!","^="],"~:defs",["^ ","~$i",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","~:line",88,"~:column",7,"~:end-line",88,"~:end-column",8,"~:arglists",["~#list",["~$quote",["^M",[["~$route","~$&","~$args"]]]]],"~:doc","The 'i' function is a route to almost all of the INScore built-in functionality inside replica.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^M",["^O","^P"]]],"^L",["^M",[["^O","~$&","^P"]]],"~:arglists-meta",["^M",[null]]]],"^9","~$replica.inscore/i","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",8,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^O","^P"]]],"^L",["^M",[["^O","~$&","^P"]]],"^V",["^M",[null]]],"^U",[["^M",["^O","^P"]]],"~:protocol-impl",null,"^V",["^M",[null]],"^I",1,"^H",88,"^J",88,"^T",1,"~:fn-var",true,"^L",["^M",[["^O","~$&","^P"]]],"^Q","The 'i' function is a route to almost all of the INScore built-in functionality inside replica."],"~$routes",["^ ","^9","~$replica.inscore/routes","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",75,"^I",1,"^J",75,"^K",12,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",75,"^I",6,"^J",75,"^K",12],"~:tag","~$cljs.core/IMap"],"~$watch!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",63,"^I",7,"^J",63,"^K",13,"^L",["^M",["^N",["^M",[["~$object","~$watch-for","~$&","~$body"]]]]],"^Q","Macro command for creating a watch to an element. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^14","^15"]]],"^L",["^M",[["^13","^14","~$&","^15"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/watch!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^14","^15"]]],"^L",["^M",[["^13","^14","~$&","^15"]]],"^V",["^M",[null]]],"^U",[["^M",["^13","^14","^15"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",63,"^J",63,"^T",2,"^Y",true,"^L",["^M",[["^13","^14","~$&","^15"]]],"^Q","Macro command for creating a watch to an element. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$msg!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",41,"^I",7,"^J",41,"^K",11,"^L",["^M",["^N",["^M",[["^13","~$&","~$msg-codes"]]]]],"^Q","Address an object [or create it] and send to it a command. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^13","^18"]]],"^L",["^M",[["^13","~$&","^18"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/msg!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",1,"^U",[["^M",["^13","^18"]]],"^L",["^M",[["^13","~$&","^18"]]],"^V",["^M",[null]]],"^U",[["^M",["^13","^18"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",41,"^J",41,"^T",1,"^Y",true,"^L",["^M",[["^13","~$&","^18"]]],"^Q","Address an object [or create it] and send to it a command. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$txt!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",58,"^I",7,"^J",58,"^K",11,"^L",["^M",["^N",["^M",[["^13","~$txt-string","~$&","~$opt"]]]]],"^Q","Macro command for creating a new text entry. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1;","^1<"]]],"^L",["^M",[["^13","^1;","~$&","^1<"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/txt!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1;","^1<"]]],"^L",["^M",[["^13","^1;","~$&","^1<"]]],"^V",["^M",[null]]],"^U",[["^M",["^13","^1;","^1<"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",58,"^J",58,"^T",2,"^Y",true,"^L",["^M",[["^13","^1;","~$&","^1<"]]],"^Q","Macro command for creating a new text entry. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$setx!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",48,"^I",7,"^J",48,"^K",12,"^L",["^M",["^N",["^M",[["^13","~$obj-type","~$&","^P"]]]]],"^Q","Dispatches a 'set [obj-type] [args]' command to an object.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1?","^P"]]],"^L",["^M",[["^13","^1?","~$&","^P"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/setx!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",12,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1?","^P"]]],"^L",["^M",[["^13","^1?","~$&","^P"]]],"^V",["^M",[null]]],"^U",[["^M",["^13","^1?","^P"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",48,"^J",48,"^T",2,"^Y",true,"^L",["^M",[["^13","^1?","~$&","^P"]]],"^Q","Dispatches a 'set [obj-type] [args]' command to an object."],"~$dropl!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",19,"^I",7,"^J",19,"^K",13,"^L",["^M",["^N",["^M",[["~$&","~$codes"]]]]],"^Q","Drops (sends) a line, combining its arguments and adding a semicolon to the end, to the active INScore window.","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1B"]]],"^L",["^M",[["~$&","^1B"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/dropl!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1B"]]],"^L",["^M",[["~$&","^1B"]]],"^V",["^M",[null]]],"^U",[["^M",["^1B"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",19,"^J",19,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1B"]]],"^Q","Drops (sends) a line, combining its arguments and adding a semicolon to the end, to the active INScore window."],"~$dropc!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",7,"^I",7,"^J",7,"^K",13,"^L",["^M",["^N",["^M",[["~$&","^1B"]]]]],"^Q","Drops (sends) the desired code string to the active INScore window. If several arguments are provided then they are combined as one string without any formatting.","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1B"]]],"^L",["^M",[["~$&","^1B"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/dropc!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1B"]]],"^L",["^M",[["~$&","^1B"]]],"^V",["^M",[null]]],"^U",[["^M",["^1B"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",7,"^J",7,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1B"]]],"^Q","Drops (sends) the desired code string to the active INScore window. If several arguments are provided then they are combined as one string without any formatting."],"~$clear!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",36,"^I",7,"^J",36,"^K",13,"^L",["^M",["^N",["^M",[["~$&","~$obj"]]]]],"^Q","sends a '* del' message to the desired object or scene (if no argument is provided then '/ITL/scene/' is assumed).","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1G"]]],"^L",["^M",[["~$&","^1G"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/clear!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",13,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1G"]]],"^L",["^M",[["~$&","^1G"]]],"^V",["^M",[null]]],"^U",[["^M",["^1G"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",36,"^J",36,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1G"]]],"^Q","sends a '* del' message to the desired object or scene (if no argument is provided then '/ITL/scene/' is assumed)."],"~$addr",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",29,"^I",7,"^J",29,"^K",11,"^L",["^M",["^N",["^M",[["^13"]]]]],"^Q","Address an object from a scene, returns OSC path. If no scene is prepended in the form '/ITL/scenex/objx' then '/ITL/scene/[object]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"^9","~$replica.inscore/addr","^S",false,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^U",["^M",[["^13"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^H",29,"^J",29,"^T",1,"^Y",true,"^L",["^M",["^N",["^M",[["^13"]]]]],"^Q","Address an object from a scene, returns OSC path. If no scene is prepended in the form '/ITL/scenex/objx' then '/ITL/scene/[object]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$dropls!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",24,"^I",7,"^J",24,"^K",14,"^L",["^M",["^N",["^M",[["~$&","~$lines"]]]]],"^Q","Drops (sends) one line for each argument to the active INScore window. You can provide fragments of code inside each line. [see doc for 'dropl aka replica.inscore/dropl!]","^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1L"]]],"^L",["^M",[["~$&","^1L"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/dropls!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",14,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1L"]]],"^L",["^M",[["~$&","^1L"]]],"^V",["^M",[null]]],"^U",[["^M",["^1L"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",24,"^J",24,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1L"]]],"^Q","Drops (sends) one line for each argument to the active INScore window. You can provide fragments of code inside each line. [see doc for 'dropl aka replica.inscore/dropl!]"],"~$make-line",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",15,"^I",7,"^J",15,"^K",16,"^L",["^M",["^N",["^M",[["~$&","^1B"]]]]],"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1B"]]],"^L",["^M",[["~$&","^1B"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/make-line","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",16,"^R",["^ ","^S",true,"^T",0,"^U",[["^M",["^1B"]]],"^L",["^M",[["~$&","^1B"]]],"^V",["^M",[null]]],"^U",[["^M",["^1B"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",15,"^J",15,"^T",0,"^Y",true,"^L",["^M",[["~$&","^1B"]]]],"~$als!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",70,"^I",7,"^J",70,"^K",11,"^L",["^M",["^N",["^M",[["^13","~$your-alias","~$&","^1<"]]]]],"^Q","Macro command for creating an alias for the desired object","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1Q","^1<"]]],"^L",["^M",[["^13","^1Q","~$&","^1<"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/als!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1Q","^1<"]]],"^L",["^M",[["^13","^1Q","~$&","^1<"]]],"^V",["^M",[null]]],"^U",[["^M",["^13","^1Q","^1<"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",70,"^J",70,"^T",2,"^Y",true,"^L",["^M",[["^13","^1Q","~$&","^1<"]]],"^Q","Macro command for creating an alias for the desired object"],"~$gmn!",["^ ","^E",null,"^F",["^ ","^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^H",53,"^I",7,"^J",53,"^K",11,"^L",["^M",["^N",["^M",[["^13","~$gmn-string","~$&","^1<"]]]]],"^Q","Macro command for creating a new score from GMN code. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1T","^1<"]]],"^L",["^M",[["^13","^1T","~$&","^1<"]]],"^V",["^M",[null]]]],"^9","~$replica.inscore/gmn!","^S",true,"^G","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^K",11,"^R",["^ ","^S",true,"^T",2,"^U",[["^M",["^13","^1T","^1<"]]],"^L",["^M",[["^13","^1T","~$&","^1<"]]],"^V",["^M",[null]]],"^U",[["^M",["^13","^1T","^1<"]]],"^X",null,"^V",["^M",[null]],"^I",1,"^H",53,"^J",53,"^T",2,"^Y",true,"^L",["^M",[["^13","^1T","~$&","^1<"]]],"^Q","Macro command for creating a new score from GMN code. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~$i","~$clear","~$gmn","^12","^17","~$txt","^1:","^1>","~$msg","^1A","^1D","^1F","^1I","^1K","^1N","~$g","~$dropl","~$alias","~$watch","^:","~$dropc","~$dropls","~$als","^1P","^1S","~$setx","^W"]],"~:order",["~$g","^1[","^20","^24","^23","^27","^26","^1I","^28","^25","^1Z","^1N","^21","^22","^1P","^1:","^1S","^1K","^1>","^1D","^12","^1F","^17","^1A","^W","~$i","^:"]],"^Q",null]