["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$document",["^ ","~$getElementById",["^ "]],"~$dropTextTo",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$replica.inscore","~:imports",null,"~:requires",["^ ","~$replica.utils","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$doc-commands","^=","~$command!","^=","~$proc!","^=","~$add-routes!","^="],"~:defs",["^ ","~$cmd!",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","~:line",42,"~:column",7,"~:end-line",42,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^N",[["~$object","~$&","~$cmd-codes"]]]]],"~:doc","Address an object [or create it] and send to it a command. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^N",["^P","^Q"]]],"^M",["^N",[["^P","~$&","^Q"]]],"~:arglists-meta",["^N",[null]]]],"^9","~$replica.inscore/cmd!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",11,"^S",["^ ","^T",true,"^U",1,"^V",[["^N",["^P","^Q"]]],"^M",["^N",[["^P","~$&","^Q"]]],"^W",["^N",[null]]],"^V",[["^N",["^P","^Q"]]],"~:protocol-impl",null,"^W",["^N",[null]],"^J",1,"^I",42,"^K",42,"^U",1,"~:fn-var",true,"^M",["^N",[["^P","~$&","^Q"]]],"^R","Address an object [or create it] and send to it a command. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$i",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",78,"^J",7,"^K",78,"^L",8,"^M",["^N",["^O",["^N",[["~$route","~$&","~$args"]]]]],"^R","The 'i' function is a route to almost all of the INScore built-in functionality inside replica. Available commands are 'clear 'drop[c][l[s]] 'cmds 'gmn 'a#","^S",["^ ","^T",true,"^U",1,"^V",[["^N",["^[","^10"]]],"^M",["^N",[["^[","~$&","^10"]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/i","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",8,"^S",["^ ","^T",true,"^U",1,"^V",[["^N",["^[","^10"]]],"^M",["^N",[["^[","~$&","^10"]]],"^W",["^N",[null]]],"^V",[["^N",["^[","^10"]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",78,"^K",78,"^U",1,"^Z",true,"^M",["^N",[["^[","~$&","^10"]]],"^R","The 'i' function is a route to almost all of the INScore built-in functionality inside replica. Available commands are 'clear 'drop[c][l[s]] 'cmds 'gmn 'a#"],"~$routes",["^ ","^9","~$replica.inscore/routes","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",67,"^J",1,"^K",67,"^L",12,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",67,"^J",6,"^K",67,"^L",12],"~:tag","~$cljs.core/IMap"],"~$cmds!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",47,"^J",7,"^K",47,"^L",12,"^M",["^N",["^O",["^N",[["^P","~$&","~$cmds"]]]]],"^R","Address an object [or create it] and send to it some commands. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'.","^S",["^ ","^T",true,"^U",1,"^V",[["^N",["^P","^17"]]],"^M",["^N",[["^P","~$&","^17"]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/cmds!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",12,"^S",["^ ","^T",true,"^U",1,"^V",[["^N",["^P","^17"]]],"^M",["^N",[["^P","~$&","^17"]]],"^W",["^N",[null]]],"^V",[["^N",["^P","^17"]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",47,"^K",47,"^U",1,"^Z",true,"^M",["^N",[["^P","~$&","^17"]]],"^R","Address an object [or create it] and send to it some commands. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$setx!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",52,"^J",7,"^K",52,"^L",12,"^M",["^N",["^O",["^N",[["^P","~$prop","~$&","^10"]]]]],"^R","Dispatches a 'set [prop] [args]' command to an object.","^S",["^ ","^T",true,"^U",2,"^V",[["^N",["^P","^1:","^10"]]],"^M",["^N",[["^P","^1:","~$&","^10"]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/setx!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",12,"^S",["^ ","^T",true,"^U",2,"^V",[["^N",["^P","^1:","^10"]]],"^M",["^N",[["^P","^1:","~$&","^10"]]],"^W",["^N",[null]]],"^V",[["^N",["^P","^1:","^10"]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",52,"^K",52,"^U",2,"^Z",true,"^M",["^N",[["^P","^1:","~$&","^10"]]],"^R","Dispatches a 'set [prop] [args]' command to an object."],"~$dropl!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",18,"^J",7,"^K",18,"^L",13,"^M",["^N",["^O",["^N",[["~$&","~$codes"]]]]],"^R","Drops (sends) a line, combining its arguments as a string and adding a semicolon to the end, to the active INScore window. If several arguments are provided then they are combined as one string without any formatting.","^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1="]]],"^M",["^N",[["~$&","^1="]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/dropl!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",13,"^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1="]]],"^M",["^N",[["~$&","^1="]]],"^W",["^N",[null]]],"^V",[["^N",["^1="]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",18,"^K",18,"^U",0,"^Z",true,"^M",["^N",[["~$&","^1="]]],"^R","Drops (sends) a line, combining its arguments as a string and adding a semicolon to the end, to the active INScore window. If several arguments are provided then they are combined as one string without any formatting."],"~$dropc!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",9,"^J",7,"^K",9,"^L",13,"^M",["^N",["^O",["^N",[["~$&","^1="]]]]],"^R","Drops (sends) the desired code string to the active INScore window. If several arguments are provided then they are combined as one string without any formatting.","^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1="]]],"^M",["^N",[["~$&","^1="]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/dropc!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",13,"^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1="]]],"^M",["^N",[["~$&","^1="]]],"^W",["^N",[null]]],"^V",[["^N",["^1="]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",9,"^K",9,"^U",0,"^Z",true,"^M",["^N",[["~$&","^1="]]],"^R","Drops (sends) the desired code string to the active INScore window. If several arguments are provided then they are combined as one string without any formatting."],"~$clear!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",37,"^J",7,"^K",37,"^L",13,"^M",["^N",["^O",["^N",[["~$&","~$scene"]]]]],"^R","Clears the INScore viewer by deleting every element from the desired scene (if no scene argument is provided then 'scene' is assumed).","^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1B"]]],"^M",["^N",[["~$&","^1B"]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/clear!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",13,"^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1B"]]],"^M",["^N",[["~$&","^1B"]]],"^W",["^N",[null]]],"^V",[["^N",["^1B"]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",37,"^K",37,"^U",0,"^Z",true,"^M",["^N",[["~$&","^1B"]]],"^R","Clears the INScore viewer by deleting every element from the desired scene (if no scene argument is provided then 'scene' is assumed)."],"~$addr",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",28,"^J",7,"^K",28,"^L",11,"^M",["^N",["^O",["^N",[["^P"]]]]],"^R","Address an object from a scene, returns OSC path. If no scene is prepended in the form 'scenex/objx' then 'scene/[object]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"^9","~$replica.inscore/addr","^T",false,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",11,"^V",["^N",[["^P"]]],"^Y",null,"^W",["^N",[null,null]],"^J",1,"^I",28,"^K",28,"^U",1,"^Z",true,"^M",["^N",["^O",["^N",[["^P"]]]]],"^R","Address an object from a scene, returns OSC path. If no scene is prepended in the form 'scenex/objx' then 'scene/[object]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"~$dropls!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",23,"^J",7,"^K",23,"^L",14,"^M",["^N",["^O",["^N",[["~$&","~$lines"]]]]],"^R","Drops (sends) one line for each argument to the active INScore window. You can provide fragments of code inside each line. [see doc for 'dropl aka replica.inscore/dropl!]","^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1G"]]],"^M",["^N",[["~$&","^1G"]]],"^W",["^N",[null]]]],"^9","~$replica.inscore/dropls!","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",14,"^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1G"]]],"^M",["^N",[["~$&","^1G"]]],"^W",["^N",[null]]],"^V",[["^N",["^1G"]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",23,"^K",23,"^U",0,"^Z",true,"^M",["^N",[["~$&","^1G"]]],"^R","Drops (sends) one line for each argument to the active INScore window. You can provide fragments of code inside each line. [see doc for 'dropl aka replica.inscore/dropl!]"],"~$make-line",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",14,"^J",8,"^K",14,"^L",17,"~:private",true,"^M",["^N",["^O",["^N",[["~$&","^1="]]]]],"^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1="]]],"^M",["^N",[["~$&","^1="]]],"^W",["^N",[null]]]],"^1J",true,"^9","~$replica.inscore/make-line","^T",true,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",17,"^S",["^ ","^T",true,"^U",0,"^V",[["^N",["^1="]]],"^M",["^N",[["~$&","^1="]]],"^W",["^N",[null]]],"^V",[["^N",["^1="]]],"^Y",null,"^W",["^N",[null]],"^J",1,"^I",14,"^K",14,"^U",0,"^Z",true,"^M",["^N",[["~$&","^1="]]]],"~$als!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",62,"^J",7,"^K",62,"^L",11,"^M",["^N",["^O",["^N",[["^P","~$your-alias"]]]]],"^R","Macro command for creating an alias for the desired object"],"^9","~$replica.inscore/als!","^T",false,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",11,"^V",["^N",[["^P","^1M"]]],"^Y",null,"^W",["^N",[null,null]],"^J",1,"^I",62,"^K",62,"^U",2,"^Z",true,"^M",["^N",["^O",["^N",[["^P","^1M"]]]]],"^R","Macro command for creating an alias for the desired object"],"~$inscore-viewer",["^ ","^9","~$replica.inscore/inscore-viewer","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",7,"^J",1,"^K",7,"^L",24,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",7,"^J",10,"^K",7,"^L",24],"^14","~$js"],"~$gmn!",["^ ","^F",null,"^G",["^ ","^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^I",57,"^J",7,"^K",57,"^L",11,"^M",["^N",["^O",["^N",[["^P","~$code-string"]]]]],"^R","Macro command for creating a new GUIDO score object from GMN code. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."],"^9","~$replica.inscore/gmn!","^T",false,"^H","/Users/lpratsbosca/REPLiCA/src/replica/inscore.cljs","^L",11,"^V",["^N",[["^P","^1S"]]],"^Y",null,"^W",["^N",[null,null]],"^J",1,"^I",57,"^K",57,"^U",2,"^Z",true,"^M",["^N",["^O",["^N",[["^P","^1S"]]]]],"^R","Macro command for creating a new GUIDO score object from GMN code. If no scene is prepended in the form '[scenex/objx]' then 'scene/[obj]' is assumed. For aliases prepend '#' -> '#/my/alias'."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~$cmd","^E","~$i","~$clear","~$gmn","^16","^19","^1<","^1?","^1A","^1D","^17","^1F","~$dropl","^:","~$dropc","~$dropls","~$als","^1L","^1R","~$setx","^11"]],"~:order",["^1[","^23","^22","^1D","^17","^24","^21","^1Z","^1Y","^20","^1L","^1R","^1F","^16","^19","^1?","^1A","^E","^1<","^11","~$i","^:"]],"^R",null]